name: Release Extension

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  workflow_dispatch:

# Add explicit permissions for the workflow
permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

      - name: Get version from manifest
        id: get_version
        run: |
          VERSION=$(node -p "require('./manifest.json').version")
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT
          echo "Extension version: ${VERSION}"

      - name: Create extension packages
        run: |
          # Create zip package for Chrome Web Store and manual installation
          cd dist
          zip -r "../immersive-memorize-${{ steps.get_version.outputs.version }}.zip" .
          cd ..

      - name: Verify package contents
        run: |
          echo "=== ZIP Package Contents ==="
          unzip -l "immersive-memorize-${{ steps.get_version.outputs.version }}.zip"

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## Chrome Extension for Japanese Learning

          Learn Japanese vocabulary from Netflix with automatic flashcard generation.

          ### Installation
          1. Download `.zip` file
          2. Extract and load in Chrome Extensions (Developer mode)
          3. Configure JLPT vocabulary in options
          4. Press hotkey (default: S) to learn words
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Immersive Memorize ${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            immersive-memorize-${{ steps.get_version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-packages-${{ steps.get_version.outputs.version }}
          path: |
            immersive-memorize-${{ steps.get_version.outputs.version }}.zip
          retention-days: 30
