name: Release Extension

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  workflow_dispatch:

# Add explicit permissions for the workflow
permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

      - name: Get version from manifest
        id: get_version
        run: |
          VERSION=$(node -p "require('./manifest.json').version")
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT
          echo "Extension version: ${VERSION}"

      - name: Create extension packages
        run: |
          # Create zip package for Chrome Web Store and manual installation
          cd dist
          zip -r "../immersive-memorize-${{ steps.get_version.outputs.version }}.zip" .
          cd ..

      - name: Verify package contents
        run: |
          echo "=== ZIP Package Contents ==="
          unzip -l "immersive-memorize-${{ steps.get_version.outputs.version }}.zip"

      - name: Generate release notes from changelog
        id: release_notes
        run: |
          VERSION=$(node -p "require('./manifest.json').version")
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

          echo "## ðŸŽ‰ What's Changed in v${VERSION}" > release_notes.md
          echo "" >> release_notes.md

          # Extract current version changes from CHANGELOG.md
          if [ -f "CHANGELOG.md" ]; then
            echo "### âœ¨ Changes" >> release_notes.md
            # Find the current version section and extract until next version or end
            awk "/## \[v${VERSION}\]/{flag=1; next} /## \[v[0-9]/{flag=0} flag" CHANGELOG.md | \
            sed 's/### Commits/### Changes/g' | \
            sed '/^[[:space:]]*$/d' | \
            head -20 >> release_notes.md
            
            # If no content was found, add fallback
            if [ ! -s release_notes.md ] || [ $(wc -l < release_notes.md) -le 3 ]; then
              echo "" >> release_notes.md
              echo "- Version ${VERSION} released with new features and improvements" >> release_notes.md
            fi
          else
            echo "### âœ¨ Changes" >> release_notes.md
            echo "- Version ${VERSION} released with new features and improvements" >> release_notes.md
          fi

          echo "" >> release_notes.md
          echo "---" >> release_notes.md
          echo "" >> release_notes.md  
          echo "## ðŸ“¦ Chrome Extension for Japanese Learning" >> release_notes.md
          echo "" >> release_notes.md
          echo "Learn Japanese vocabulary from Netflix with automatic flashcard generation." >> release_notes.md
          echo "" >> release_notes.md
          echo "### ðŸ”§ Installation Guide" >> release_notes.md
          echo "1. Download the \`.zip\` file from the **Assets** section below" >> release_notes.md
          echo "2. Extract the zip file to a folder" >> release_notes.md  
          echo "3. Open Chrome and navigate to \`chrome://extensions/\`" >> release_notes.md
          echo "4. Enable **Developer mode** (toggle in top right)" >> release_notes.md
          echo "5. Click **Load unpacked** and select the extracted folder" >> release_notes.md
          echo "6. Configure JLPT vocabulary levels in extension options" >> release_notes.md
          echo "7. Press hotkey (default: **S**) while watching to learn vocabulary from subtitles" >> release_notes.md
          echo "" >> release_notes.md

          if [ -n "$PREV_TAG" ]; then
            echo "### ðŸ“‹ Full Changelog" >> release_notes.md
            echo "**Full Changelog**: https://github.com/\${{ github.repository }}/compare/${PREV_TAG}...v${VERSION}" >> release_notes.md
          else
            echo "### ðŸ“‹ Changelog" >> release_notes.md
            echo "See [CHANGELOG.md](https://github.com/\${{ github.repository }}/blob/main/CHANGELOG.md) for detailed version history." >> release_notes.md
          fi

      - name: Preview generated release notes
        run: |
          echo "=== Generated Release Notes Preview ==="
          cat release_notes.md
          echo "======================================="

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Immersive Memorize ${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            immersive-memorize-${{ steps.get_version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-packages-${{ steps.get_version.outputs.version }}
          path: |
            immersive-memorize-${{ steps.get_version.outputs.version }}.zip
          retention-days: 30
